{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","syn","setState","searchField","target","value","state","string","fetch","then","response","json","alpa","catch","reject","console","log","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qTAIaA,G,MAAM,SAACC,GAAD,OAEnB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BAC1B,6BAAKL,EAAMI,QAAQE,OACjB,4BAAIN,EAAMI,QAAQG,aCHPC,G,MAAU,SAACR,GAExB,OAAO,qBAAKC,UAAU,YAAf,SACAD,EAAMS,SAASC,KAAI,SAAAN,GAAO,OACxB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCNfM,G,MAAW,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAYC,EAAd,EAAcA,aAAd,OAEnB,uBAAOZ,UAAU,SAChBa,KAAK,SAASF,YAAaA,EAC3BG,SAAWF,MCkDFG,G,wDAjDb,aAAc,IAAD,8BACX,gBAmBFH,aAAc,SAAAI,GAEZ,EAAKC,SAAS,CAACC,YAAYF,EAAIG,OAAOC,SAnBtC,EAAKC,MAAM,CAETC,OAAQ,aAERd,SAAS,GACTU,YAAY,IARH,E,gEAYO,IAAD,OAEjBK,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAE,EAAKV,SAAS,CAACT,SAASmB,OACnCC,OAAM,SAAAC,GAAM,OAAEC,QAAQC,IAAI,uB,+BAQnB,IAAD,EACyBC,KAAKX,MAA7Bb,EADD,EACCA,SAASU,EADV,EACUA,YAIVe,EAAiBzB,EAAS0B,QAAO,SAAA/B,GAAO,OAAGA,EAAQE,KAAK8B,cAAcC,SAASlB,EAAYiB,kBACjG,OACD,sBAAKnC,UAAU,MAAf,UACE,iDACA,cAAC,EAAD,CAAWW,YAAY,kBACvBC,aAAcoB,KAAKpB,eAKb,cAAC,EAAD,CAAUJ,SAAUyB,W,GAzCdI,cCIHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.858da61a.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.styles.css';\r\n\r\n\r\nexport const Card= (props) => (\r\n\r\n<div className='card-container'>\r\n    <img alt='monster' src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} />\r\n<h2>{props.monster.name}</h2>\r\n  <p>{props.monster.email}</p>    \r\n</div>\r\n\r\n\r\n);","import React from 'react';\r\nimport {Card} from  '../card/card.component';\r\nimport './card-list.styles.css';\r\n\r\n\r\n\r\nexport const CardList= (props) => {\r\n\r\nreturn <div className='card-list'>\r\n     { props.monsters.map(monster=>(\r\n         <Card key={monster.id} monster={monster}/>\r\n    ))}\r\n    \r\n    </div>\r\n\r\n\r\n}","import React from 'react';\r\nimport './search-box.styles.css';\r\n\r\n\r\nexport const SearchBox= ({placeholder,handleChange}) => (\r\n\r\n     <input className=\"search\"\r\n      type='search' placeholder={placeholder}   \r\n      onChange={ handleChange}/>\r\n)","import React, { Component } from 'react';\n\nimport { CardList } from './components/card-list/card-list.component';\nimport { SearchBox } from './components/search-box/search-box.component';\n//import logo from './logo.svg';\nimport './App.css';\n\n\nclass App extends Component {\n  constructor(){\n    super();\n\n    this.state={\n\n      string: 'Hello Pops',\n      \n      monsters:[],\n      searchField:''\n    };\n    //this.handleChange=this.handleChange.bind(this);//this is replaced by arrow function\n  }\n  componentDidMount(){\n\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(alpa=>this.setState({monsters:alpa}))\n    .catch(reject=>console.log('there is error'));\n  }\n\n  handleChange= syn => {\n\n    this.setState({searchField:syn.target.value} );\n\n  }\n  render() {\n    const { monsters,searchField } =this.state;\n   \n    //const  monsters  =this.state.monsters;\n    //const  searchField  =this.state.searchField;\n     const filteredMonsters=monsters.filter(monster =>monster.name.toLowerCase().includes(searchField.toLowerCase()));\n     return ( \n    <div className=\"App\">\n      <h1>Roller Monsters</h1>\n      <SearchBox placeholder='search monsters'\n      handleChange={this.handleChange}\n      >\n     \n      </SearchBox>\n      {/* <input type='search' placeholder='search here' onChange={ syn => { this.setState({searchField:syn.target.value} ) }}/> */}\n            <CardList monsters={filteredMonsters}>\n     \n      </CardList>\n      \n    </div>\n  );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}